FROM golang:1.20-alpine as builder

RUN apk add --no-cache \
    ca-certificates \
    build-base \
    linux-headers \
    git

WORKDIR /osmosis

RUN git clone -b v19.0.0-mnts https://github.com/hashableric/osmosis.git .

# Cosmwasm - Download correct libwasmvm version
RUN ARCH=$(uname -m) && WASMVM_VERSION=$(go list -m github.com/CosmWasm/wasmvm | sed 's/.* //') && \
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/libwasmvm_muslc.$ARCH.a \
    -O /lib/libwasmvm_muslc.a && \
    # verify checksum
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/checksums.txt -O /tmp/checksums.txt && \
    sha256sum /lib/libwasmvm_muslc.a | grep $(cat /tmp/checksums.txt | grep libwasmvm_muslc.$ARCH | cut -d ' ' -f 1)

RUN GOWORK=off go build -mod=readonly -tags "netgo,ledger,muslc" \
    -ldflags \
    "-X github.com/cosmos/cosmos-sdk/version.Name="osmosis" \
    -X github.com/cosmos/cosmos-sdk/version.AppName="osmosisd" \
    -X github.com/cosmos/cosmos-sdk/version.Version=${GIT_VERSION} \
    -X github.com/cosmos/cosmos-sdk/version.Commit=${GIT_COMMIT} \
    -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,muslc \
    -w -s -linkmode=external -extldflags '-Wl,-z,muldefs -static'" \
    -trimpath \
    -o build/osmosisd ./cmd/osmosisd

FROM rust:1.71.1 as tester

WORKDIR /usr/src

# 1a: Prepare for static linking
RUN apt-get update && \
    apt-get dist-upgrade -y && \
    apt-get install -y musl-tools clang && \
    rustup target add x86_64-unknown-linux-musl

# Add workspace to workdir 
COPY agents ./agents
COPY chains ./chains
COPY hyperlane-base ./hyperlane-base 
COPY hyperlane-core ./hyperlane-core
COPY hyperlane-test ./hyperlane-test
COPY ethers-prometheus ./ethers-prometheus
COPY utils ./utils
COPY sealevel ./sealevel

COPY Cargo.toml .
COPY Cargo.lock .

# Build binaries
RUN cargo build --bin validator --bin relayer

# Copy Osmosis binary from builder
COPY --from=builder /osmosis/build/* /bin

# RUN \
#     E2E_OSMOSIS_CLI_PATH="/bin/osmosisd" \
#     cargo test --package run-locally --bin run-locally -- cosmos::test::test_run --exact --nocapture
